trigger:
- none

pool:
  name: 'default'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: Build_and_Test
  jobs:
  - job: Build
    displayName: 'Build and Test'
    steps:
      - task: NuGetToolInstaller@1

      - task: NuGetCommand@2
        inputs:
          restoreSolution: '$(solution)'

      - task: VSBuild@1
        inputs:
          solution: '$(solution)'
          msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
          platform: '$(buildPlatform)'
          configuration: '$(buildConfiguration)'

      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: '$(build.artifactStagingDirectory)'
          artifactName: 'drop'
          publishLocation: 'Container'

      - task: VSTest@2
        inputs:
          platform: '$(buildPlatform)'
          configuration: '$(buildConfiguration)'

- stage: Terraform_Deployment
  jobs:
  - job: Deploy_using_Terraform
    displayName: 'Deploy using Terraform'
    steps:
      - task: JasonBJohnson.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
        inputs:
          terraformVersion: 'latest'
          specifyPath: 'C:\terraform_1.7.5_windows_amd64'

      - task: TerraformTaskV4@4
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/mvc/Teraform'
          backendServiceArm: 'new_connection'
          backendAzureRmResourceGroupName: 'app_grp3'
          backendAzureRmStorageAccountName: 'sttestingaccount0001'
          backendAzureRmContainerName: 'containertfstate'
          backendAzureRmKey: 'Folder/terraform.tfstate'
         

      - task: TerraformTaskV4@4
        inputs:
          provider: 'azurerm'
          command: 'plan'
          workingDirectory: '$(System.DefaultWorkingDirectory)/mvc/Teraform'
          environmentServiceNameAzureRM: 'new_connection'

      - task: TerraformTaskV4@4
        inputs:
          provider: 'azurerm'
          command: 'apply'
          environmentServiceNameAzureRM: 'new_connection'



# - task: DownloadBuildArtifacts@0
#   inputs:
#     buildType: 'current'
#     downloadType: 'single'
#     artifactName: 'drop'
#     downloadPath: '$(System.ArtifactsDirectory)'

# - task: AzureRmWebAppDeployment@4
#   inputs:
#     azureSubscription: 'new_connection'
#     appType: 'webApp'
#     WebAppName: 'DoctorManagementSystem'
#     package: '$(System.ArtifactsDirectory)/drop/WebApp.zip' 
#     deploymentMethod: 'auto'

# - task: AzureRmWebAppDeployment@4
#   inputs:
#     azureSubscription: 'new_connection'
#     appType: 'webApp'
#     WebAppName: 'DoctorManagementSystem'   
#     packageForLinux: '$(System.ArtifactsDirectory)/drop/WebApp.zip'